new entry "Interrupt_DeflectAttacks_Rubber"
type "InterruptData"
data "DisplayName" "TODO handle;1"
data "Description" "TODO handle;2"
data "ExtraDescription" "TODO handle;2"
data "Icon" "PassiveFeature_DeflectMissiles" // TODO: Make own icon
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Self(context.Target,context.Observer) and IsMeleeWeaponAttack() and not HasStatus('SG_Polymorph_BeastShape') and not AnyEntityIsItem()"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,-(1d10+DexterityModifier+ClassLevel(Monk)));ApplyStatus(OBSERVER_TARGET,INTERRUPT_DEFLECT_ATTACKS_RUBBER_HIT,100,1);RestoreResource(DeflectAttacks_Rubber_Charge,1,0)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_DeflectAttacks_Rubber_Return"
type "InterruptData"
data "DisplayName" "TODO handle;1"
data "Description" "TODO handle;2"
data "Icon" "PassiveFeature_DeflectMissiles" // TODO: Make own icon
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Self(context.Target,context.Observer) and IsAttackType(AttackType.MeleeWeaponAttack) and not (IsCriticalMiss() or IsMiss()) and HasActionResource('DeflectAttacks_Rubber_Charge', 1, 0, false, false, context.Observer) and not AnyEntityIsItem()"
data "Properties" "UseSpell(SWAP,Target_Deflect_Attacks_Rubber,true,true,true,c4598bdb-fc07-40dd-a62c-90cc138bd76f);UseActionResource(OBSERVER_OBSERVER,DeflectAttacks_Rubber_Charge,1,0)"
data "Cost" "KiPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

// TODO: Split this into ranged and melee versions
new entry "Interrupt_DeflectSpells_Rubber"
type "InterruptData"
data "DisplayName" "TODO handle"
data "Description" "TODO handle"
data "ExtraDescription" "TODO handle"
data "Icon" "PassiveFeature_DeflectMissiles" // TODO: Make own icon
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Self(context.Target,context.Observer) and IsSpellAttack() and not HasStatus('SG_Polymorph_BeastShape') and not AnyEntityIsItem()"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,-(1d10+DexterityModifier+ClassLevel(Monk)));ApplyStatus(OBSERVER_TARGET,INTERRUPT_DEFLECT_SPELLS_RUBBER_HIT,100,1);RestoreResource(DeflectSpells_Rubber_Charge,1,0)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_DeflectSpells_Rubber_Return"
type "InterruptData"
data "DisplayName" "TODO handle;1"
data "Description" "TODO handle;2"
data "Icon" "PassiveFeature_DeflectMissiles" // TODO: Make own icon
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Self(context.Target,context.Observer) and IsAttackType(AttackType.RangedSpellAttack) and not (IsCriticalMiss() or IsMiss()) and HasActionResource('DeflectSpells_Rubber_Charge', 1, 0, false, false, context.Observer) and not AnyEntityIsItem()"
data "Properties" "UseSpell(SWAP,Projectile_Deflect_Spells_Rubber,true,true,true,c4598bdb-fc07-40dd-a62c-90cc138bd76f);UseActionResource(OBSERVER_OBSERVER,DeflectSpells_Rubber_Charge,1,0)"
data "Cost" "KiPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"